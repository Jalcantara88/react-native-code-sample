{"version":3,"sources":["assets/spinner.svg","components/CustomView.js","components/MainComponent.js","App.js"],"names":["module","exports","CustomView","name","image_url","issue","link","year","View","style","styles","resultHolder","Image","source","uri","image","containerText","labelGroup","Text","label","detail","linkButton","onPress","Linking","openURL","StyleSheet","create","flex","flexDirection","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","backgroundColor","margin","justifyContent","borderRadius","issuesHolder","fontSize","fontWeight","textAlign","marginLeft","textDecorationLine","paddingVertical","color","resizeMode","paddingLeft","borderTopLeftRadius","borderTopRightRadius","marginBottom","CustomListView","itemList","FlatList","keyExtractor","item","id","toString","data","renderItem","volume","original_url","issue_number","site_detail_url","cover_date","Main","props","state","allIssues","totalResults","isLoading","apiOffset","offset","fetch","then","response","json","console","log","setState","number_of_total_results","newArray","results","catch","error","this","apiCall","src","Spinner","Button","newNum","disabled","title","Component","App","container","StatusBar","alignItems","marginTop","currentHeight"],"mappings":"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","file":"static/js/app.97b4b27e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.c4f1b307.svg\";","import React from 'react';\r\nimport {Linking} from 'react-native';\r\nimport {FlatList, Image, View, Text, StyleSheet} from 'react-native';\r\n\r\n{/*Custom display for FlatList renderItem*/}\r\nconst CustomView = ({name, image_url, issue, link, year}) => {\r\n    return(\r\n        <>\r\n            {/*basic card view*/}\r\n            <View style={styles.resultHolder} >\r\n                <Image source={{uri: image_url}} style={styles.image}/>\r\n                {/*Info Display*/}\r\n                <View style={styles.containerText}>\r\n                    {/*Name*/}\r\n                    <View style={styles.labelGroup}>\r\n                        <Text style={styles.label}>name: </Text>\r\n                        <Text style={styles.detail}>\r\n                            {name}\r\n                        </Text>\r\n                    </View>\r\n                    {/*Issue Number*/}\r\n                    <View style={styles.labelGroup}>\r\n                        <Text style={styles.label}>issue #: </Text>\r\n                        <Text style={styles.detail}>\r\n                            {issue}\r\n                        </Text>\r\n                    </View>\r\n                    {/*Year Released*/}\r\n                    <View style={styles.labelGroup}>\r\n                        <Text style={styles.label}>year: </Text>\r\n                        <Text style={styles.detail}>\r\n                            {year}\r\n                        </Text>\r\n                    </View>\r\n                    {/*open link to comicVine website showcasing this issue*/}\r\n                    <Text style={styles.linkButton} onPress={() => Linking.openURL(link)}>\r\n                        MORE DETAILS\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </>\r\n    )\r\n}\r\n\r\n{/*Custom list view that uses flatlist to iterate over array holding api response*/}\r\nconst CustomListView = ({itemList}) => {\r\n    return(\r\n    <View style={styles.issuesHolder}>\r\n        {/*Use flatlist to call CustomView on every item of itemList*/}\r\n        <FlatList\r\n            keyExtractor={item => item.id.toString()}\r\n            data={itemList}\r\n            renderItem={({item}) => {\r\n                return(\r\n                    //call custom render method\r\n                <CustomView\r\n                    name={item.volume.name}\r\n                    image_url={item.image.original_url}\r\n                    issue={item.issue_number}\r\n                    link={item.site_detail_url}\r\n                    year={item.cover_date ? item.cover_date : \"N/A\"}\r\n                />\r\n                )\r\n            }}\r\n        />\r\n    </View>\r\n)}\r\nconst styles = StyleSheet.create({\r\n    resultHolder: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        padding: 15,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 1 },\r\n        shadowOpacity: 0.8,\r\n        shadowRadius: 2,  \r\n        elevation: 5,\r\n        backgroundColor: '#fff',\r\n        margin: 5,\r\n        justifyContent: 'center',\r\n        borderRadius: 10\r\n    },\r\n    issuesHolder: {\r\n        flex: 1\r\n    },\r\n    detail: {\r\n        fontSize: 25,\r\n        fontWeight: 500,\r\n        padding: 5,\r\n        textAlign: 'center'\r\n    },\r\n    containerText: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        marginLeft: 22,\r\n        justifyContent: 'center'\r\n    },\r\n    linkButton: {\r\n        textDecorationLine: 'none',\r\n        backgroundColor: 'dodgerblue',\r\n        paddingVertical: 5,\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        fontWeight: 400,\r\n        borderRadius: 5,\r\n        color: 'white'\r\n    },\r\n    image: {\r\n        width: '200px',\r\n        height: '300px',\r\n        resizeMode: 'cover',\r\n        \r\n    },\r\n    label: {\r\n        backgroundColor: 'crimson',\r\n        color: 'white',\r\n        padding: 3,\r\n        paddingLeft: 5,\r\n        borderTopLeftRadius: 5,\r\n        borderTopRightRadius: 5,\r\n    },\r\n    labelGroup: {\r\n        backgroundColor: 'lightpink',\r\n        borderRadius: 5,\r\n        marginBottom: 5,\r\n    },\r\n    });\r\n\r\nexport default CustomListView;\r\n","import React, { Component } from 'react';\r\nimport { \r\n    StyleSheet, \r\n    Text, \r\n    View,  \r\n    Button, \r\n} from 'react-native';\r\n//animated svg for when loading\r\nimport Spinner from '../assets/spinner.svg';\r\n//custom render view for displaying api results\r\nimport CustomListView from './CustomView';\r\n\r\n//create class to hold state and render list\r\nclass Main extends Component {\r\n    //create constructor to hold props\r\n    constructor(props) {\r\n        //grab props from parent\r\n        super(props);\r\n        this.state = {\r\n            //holds all issues returned from api call\r\n            allIssues : [],\r\n            //holds number of results from api call\r\n            totalResults: 0,\r\n            //holds loading value to show loading animation\r\n            isLoading: true,\r\n            //holds offset for api call\r\n            apiOffset: 0\r\n        }\r\n    }\r\n\r\n    apiCall(offset) {\r\n        //fetch call to api from comic vine website using proxy to get around cors - with api key\r\n        fetch('https://proxy-cors-anywhere.herokuapp.com/https://www.comicvine.com/api/issues?api_key=65c3e7b3c65af20fbfe03bb5d0cd0b8e83e9fb1a&format=json&offset=' + offset)\r\n        //turn response into json\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then(data => {\r\n            //for looking at object structure\r\n            console.log(data);\r\n            this.setState({totalResults: data.number_of_total_results});\r\n            //store results in array\r\n            const newArray = data.results;\r\n            //update state with array\r\n            this.setState({allIssues: newArray});\r\n            //once info is stored we can change isloading to false to render data\r\n            this.setState({isLoading: false});\r\n        })\r\n        //catch any errors\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.apiCall(0);\r\n    }\r\n\r\n    //render method\r\n    render() { \r\n        //check if api is done loading\r\n        if(this.state.isLoading) {\r\n            return(\r\n                <View>\r\n                    <img src={Spinner}/>\r\n                </View>\r\n            )\r\n        }\r\n         \r\n        else {\r\n            return (\r\n                <>\r\n                <View>\r\n                    <Button\r\n                        onPress={() => {\r\n                            //set new ofset value then pass that into api call function on second param\r\n                            var newNum = this.state.apiOffset - 100;\r\n                            this.setState({apiOffset: newNum}, () => {\r\n                                this.setState({isLoading: true});\r\n                                this.apiCall(this.state.apiOffset);\r\n                            });\r\n                        }}\r\n                        disabled={this.state.apiOffset === 0 ? true : false}\r\n                        title=\"prev\"\r\n                    />\r\n                    <Button\r\n                        onPress={() => {\r\n                            //set new ofset value then pass that into api call function on second param\r\n                            var newNum = this.state.apiOffset + 100;\r\n                            this.setState({apiOffset: newNum}, () => {\r\n                                this.setState({isLoading: true});\r\n                                this.apiCall(this.state.apiOffset);\r\n                            });\r\n                        }}\r\n                        title=\"next\"\r\n                    />\r\n                    <Text style={styles.detail}>TOTAL RESULTS: {this.state.totalResults}</Text>\r\n                    <Text style={styles.detail}>Viewing: {this.state.apiOffset} - {this.state.apiOffset + 100}</Text>\r\n                    {/*Render api results*/}\r\n                    <CustomListView \r\n                        itemList={this.state.allIssues}  \r\n                    />\r\n                </View></>);  \r\n        }\r\n    }\r\n}\r\n//Stylesheet for page\r\nconst styles = StyleSheet.create({\r\n    detail: {\r\n        fontSize: 25,\r\n        fontWeight: 500,\r\n        padding: 5,\r\n        textAlign: 'center'\r\n    }\r\n  });\r\n  \r\nexport default Main;","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, } from 'react-native';\nimport Main from './components/MainComponent';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Main/>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: StatusBar.currentHeight || 0,\n  },\n});\n"],"sourceRoot":""}